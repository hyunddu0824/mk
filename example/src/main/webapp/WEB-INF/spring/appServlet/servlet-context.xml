<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />		<!-- js, image등의 경로를 맵핑으로 설정 -->
	<resources mapping="/uploadStorage/**" location="/uploadStorage/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory 
	 spring에 mvc설정 작업 
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>-->
	
	<!-- 첨부파일을 위한 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<beans:property name="defaultEncoding" value="UTF-8"/>
		<beans:property name="maxUploadSize" value="5242880"/>
	</beans:bean>
	
	<!-- <context:component-scan base-package="com.spring.client" /> -->
	
	<context:component-scan base-package="com.spring.**.**.**" />
	
	<!-- 타일즈(tiles) 설정 - ViewResolver는 타일즈를 통해서, 설정파일에 존재하지 않으면
   우선순위 2로 name="order" 우선순위를 결정. -->
   <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
      <beans:property name="definitions">
         <beans:list>
            <beans:value>/WEB-INF/tiles/tiles-setting.xml</beans:value>
            <beans:value>/WEB-INF/tiles/admin-setting.xml</beans:value>
         </beans:list>
      </beans:property>
   </beans:bean>
   
   <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver" >
      <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
      <beans:property name="order" value="1" />
   </beans:bean>
   
   <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
      <beans:property name="order" value="2" />
   </beans:bean>
   
   <!-- 자동으로 AspectJ 라이브러리를 이용해서 Proxy 객체를 생성해 내는 용도로 사용. -->
   <aop:aspectj-autoproxy />
   
   <!-- aspect는 핵심 관점에 해당하는 포인트컷 메소드와 횡단 관심에 해당하는 어드바이스 메소드를 결합하기 위해 사용 
   <beans:bean id="log" class="com.spring.common.log.LoggerAdvice" />
   <aop:config>
   <aop:pointcut expression="execution(* com.spring..*Impl.*(..))" id="allPointcut"/>
   <aop:pointcut expression="execution(* com.spring..*Impl.*List(..))" id="listPointcut"/>
   <aop:aspect ref="log">
   		<aop:before method="timeLogging" pointcut-ref="allPointcut" /> 
   		<aop:around method="timeLogging" pointcut-ref="allPointcut" />
   		
   </aop:aspect>
   </aop:config>-->
   
   <!-- Annotaion 방식 사용을 위해 반드시 선언해줘야됨 (proxy-target-class 부분은) -->
   	<tx:annotation-driven/>
   
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
   	<tx:attributes>
   		<tx:method name="*Insert"/>
   		<tx:method name="*Update"/>
   		<tx:method name="*Delete"/>
   		<tx:method name="*Select" read-only="true"/>
   		<tx:method name="*List" read-only="true"/>
   		<tx:method name="*Data" read-only="true"/>
   		<tx:method name="*Detaul" read-only="true"/>
   	</tx:attributes>
   </tx:advice>
   
    <aop:config>
 <aop:pointcut expression="execution(* com.spring..*Impl.*(..))" id="allPointcut"/>
   <aop:advisor advice-ref="txAdvice" pointcut-ref="allPointcut"/>
   </aop:config>
   
  
</beans:beans>
